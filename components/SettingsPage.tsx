import React, { useState } from 'react';
import { ArrowLeft, Bell, Shield, Palette, Globe, Volume2, Eye, Smartphone, HelpCircle, ChevronRight } from 'lucide-react';

interface SettingsPageProps {
  onBack: () => void;
}

export function SettingsPage({ onBack }: SettingsPageProps) {
  const [notifications, setNotifications] = useState(true);
  const [darkMode, setDarkMode] = useState(false);
  const [language, setLanguage] = useState('ko');

  const handleToggleNotifications = () => {
    setNotifications(!notifications);
    alert(notifications ? 'üîï ÏïåÎ¶ºÏù¥ ÎπÑÌôúÏÑ±ÌôîÎêòÏóàÏäµÎãàÎã§' : 'üîî ÏïåÎ¶ºÏù¥ ÌôúÏÑ±ÌôîÎêòÏóàÏäµÎãàÎã§');
  };

  const handleToggleDarkMode = () => {
    setDarkMode(!darkMode);
    alert('üåô Îã§ÌÅ¨ Î™®Îìú Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!');
  };

  const handleLanguageChange = () => {
    alert('üåç Ïñ∏Ïñ¥ ÏÑ§Ï†ï Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!\n\nÏßÄÏõê ÏòàÏ†ï Ïñ∏Ïñ¥:\n‚Ä¢ ÌïúÍµ≠Ïñ¥\n‚Ä¢ English\n‚Ä¢ Êó•Êú¨Ë™û');
  };

  const settingSections = [
    {
      title: 'ÏïåÎ¶º',
      icon: Bell,
      items: [
        {
          title: 'Ìë∏Ïãú ÏïåÎ¶º',
          description: 'ÏÉàÎ°úÏö¥ ÏÜåÏãùÏùÑ Î∞õÏïÑÎ≥¥ÏÑ∏Ïöî',
          toggle: true,
          value: notifications,
          onToggle: handleToggleNotifications
        },
        {
          title: 'ÏïåÎ¶º ÏãúÍ∞Ñ ÏÑ§Ï†ï',
          description: 'Î∞©Ìï¥ Í∏àÏßÄ ÏãúÍ∞ÑÏùÑ ÏÑ§Ï†ïÌïòÏÑ∏Ïöî',
          action: () => alert('‚è∞ ÏïåÎ¶º ÏãúÍ∞Ñ ÏÑ§Ï†ï Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        },
        {
          title: 'ÏïåÎ¶º Ïπ¥ÌÖåÍ≥†Î¶¨',
          description: 'Î∞õÍ≥† Ïã∂ÏùÄ ÏïåÎ¶ºÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî',
          action: () => alert('üìÇ ÏïåÎ¶º Ïπ¥ÌÖåÍ≥†Î¶¨ ÏÑ§Ï†ï Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        }
      ]
    },
    {
      title: 'Í∞úÏù∏Ï†ïÎ≥¥ Î≥¥Ìò∏',
      icon: Shield,
      items: [
        {
          title: 'ÌîÑÎ°úÌïÑ Í≥µÍ∞ú ÏÑ§Ï†ï',
          description: 'Îã§Î•∏ ÏÇ¨Ïö©ÏûêÏóêÍ≤å Î≥¥Ïù¥Îäî Ï†ïÎ≥¥Î•º Í¥ÄÎ¶¨ÌïòÏÑ∏Ïöî',
          action: () => alert('üë§ ÌîÑÎ°úÌïÑ Í≥µÍ∞ú ÏÑ§Ï†ï Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        },
        {
          title: 'Ï∞®Îã® Î™©Î°ù',
          description: 'Ï∞®Îã®Ìïú ÏÇ¨Ïö©ÏûêÎ•º Í¥ÄÎ¶¨ÌïòÏÑ∏Ïöî',
          action: () => alert('üö´ Ï∞®Îã® Î™©Î°ù Í¥ÄÎ¶¨ Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        },
        {
          title: 'Îç∞Ïù¥ÌÑ∞ Îã§Ïö¥Î°úÎìú',
          description: 'ÎÇ¥ Îç∞Ïù¥ÌÑ∞Î•º Îã§Ïö¥Î°úÎìúÌïòÏÑ∏Ïöî',
          action: () => alert('üíæ Îç∞Ïù¥ÌÑ∞ Îã§Ïö¥Î°úÎìú Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        }
      ]
    },
    {
      title: 'ÎîîÏä§ÌîåÎ†àÏù¥',
      icon: Palette,
      items: [
        {
          title: 'Îã§ÌÅ¨ Î™®Îìú',
          description: 'Ïñ¥ÎëêÏö¥ ÌÖåÎßàÎ•º ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî',
          toggle: true,
          value: darkMode,
          onToggle: handleToggleDarkMode
        },
        {
          title: 'Í∏ÄÍº¥ ÌÅ¨Í∏∞',
          description: 'ÏùΩÍ∏∞ Ìé∏Ìïú Í∏ÄÍº¥ ÌÅ¨Í∏∞Î°ú Ï°∞Ï†ïÌïòÏÑ∏Ïöî',
          action: () => alert('üî§ Í∏ÄÍº¥ ÌÅ¨Í∏∞ ÏÑ§Ï†ï Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        }
      ]
    },
    {
      title: 'Ïñ∏Ïñ¥ Î∞è ÏßÄÏó≠',
      icon: Globe,
      items: [
        {
          title: 'Ïñ∏Ïñ¥',
          description: 'ÌïúÍµ≠Ïñ¥',
          action: handleLanguageChange
        },
        {
          title: 'ÏßÄÏó≠',
          description: 'ÎåÄÌïúÎØºÍµ≠',
          action: () => alert('üåè ÏßÄÏó≠ ÏÑ§Ï†ï Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        }
      ]
    },
    {
      title: 'Ï†ëÍ∑ºÏÑ±',
      icon: Eye,
      items: [
        {
          title: 'ÌôîÎ©¥ ÏùΩÍ∏∞ ÎèÑÍµ¨',
          description: 'Ï†ëÍ∑ºÏÑ± Í∏∞Îä•ÏùÑ ÌôúÏÑ±ÌôîÌïòÏÑ∏Ïöî',
          action: () => alert('‚ôø Ï†ëÍ∑ºÏÑ± Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        },
        {
          title: 'Í≥†ÎåÄÎπÑ Î™®Îìú',
          description: 'Îçî Î™ÖÌôïÌïú ÏÉâÏÉÅ ÎåÄÎπÑÎ•º ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî',
          action: () => alert('üîç Í≥†ÎåÄÎπÑ Î™®Îìú Í∏∞Îä•Ïù¥ Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')
        }
      ]
    }
  ];

  return (
    <div className="min-h-screen bg-background">
      {/* Ìó§Îçî */}
      <div className="sticky top-0 z-10 bg-card border-b border-border px-4 py-3">
        <div className="flex items-center space-x-3">
          <button
            onClick={onBack}
            className="w-10 h-10 flex items-center justify-center rounded-lg hover:bg-muted"
          >
            <ArrowLeft className="w-5 h-5" />
          </button>
          <h1 className="text-lg font-semibold">ÏÑ§Ï†ï</h1>
        </div>
      </div>

      {/* ÏÑ§Ï†ï ÏΩòÌÖêÏ∏† */}
      <div className="p-4">
        <div className="space-y-6">
          {settingSections.map((section, sectionIndex) => (
            <div key={sectionIndex} className="bg-card rounded-xl p-4">
              <div className="flex items-center space-x-3 mb-4">
                <section.icon className="w-5 h-5 text-primary" />
                <h2 className="font-semibold">{section.title}</h2>
              </div>
              
              <div className="space-y-3">
                {section.items.map((item, itemIndex) => (
                  <div 
                    key={itemIndex}
                    className="flex items-center justify-between py-3 border-b border-border last:border-b-0"
                  >
                    <div className="flex-1">
                      <div className="font-medium">{item.title}</div>
                      <div className="text-sm text-muted-foreground">{item.description}</div>
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      {item.toggle ? (
                        <button
                          onClick={item.onToggle}
                          className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                            item.value ? 'bg-primary' : 'bg-muted'
                          }`}
                        >
                          <span
                            className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                              item.value ? 'translate-x-6' : 'translate-x-1'
                            }`}
                          />
                        </button>
                      ) : (
                        <button
                          onClick={item.action}
                          className="p-1 hover:bg-muted rounded-lg"
                        >
                          <ChevronRight className="w-4 h-4 text-muted-foreground" />
                        </button>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>

        {/* Ïï± Ï†ïÎ≥¥ */}
        <div className="bg-card rounded-xl p-4 mt-6">
          <div className="flex items-center space-x-3 mb-4">
            <Smartphone className="w-5 h-5 text-primary" />
            <h2 className="font-semibold">Ïï± Ï†ïÎ≥¥</h2>
          </div>
          
          <div className="space-y-3">
            <div className="flex items-center justify-between py-3 border-b border-border">
              <span>Î≤ÑÏ†Ñ</span>
              <span className="text-muted-foreground">1.0.0</span>
            </div>
            <div className="flex items-center justify-between py-3 border-b border-border">
              <span>ÏµúÍ∑º ÏóÖÎç∞Ïù¥Ìä∏</span>
              <span className="text-muted-foreground">2024.01.30</span>
            </div>
            <div className="flex items-center justify-between py-3">
              <span>Í∞úÎ∞úÏûê</span>
              <span className="text-muted-foreground">Petit Team</span>
            </div>
          </div>
        </div>

        {/* ÎèÑÏõÄÎßê */}
        <div className="bg-card rounded-xl p-4 mt-6">
          <button
            onClick={() => alert('‚ùì ÎèÑÏõÄÎßê Î∞è FAQ ÌéòÏù¥ÏßÄÍ∞Ä Í≥ß ÏóÖÎç∞Ïù¥Ìä∏Îê©ÎãàÎã§!')}
            className="w-full flex items-center justify-between py-3"
          >
            <div className="flex items-center space-x-3">
              <HelpCircle className="w-5 h-5 text-primary" />
              <span className="font-medium">ÎèÑÏõÄÎßê Î∞è FAQ</span>
            </div>
            <ChevronRight className="w-4 h-4 text-muted-foreground" />
          </button>
        </div>
      </div>
    </div>
  );
}